blueprint:
  name: Light Occupancy
  description: >
    Turn a light on while a room is occupied during the evening, or during
    the day while it's cloudy.
  author: Scott James Remnant <scott@netsplit.com>
  domain: automation
  input:
    light:
      name: Light
      description: This light will be turned on.
      selector:
        entity:
          filter:
            - domain: light
    sensor:
      name: Sensor
      description: When this sensor detects occupancy.
      selector:
        entity:
          filter:
            - domain: binary_sensor

mode: queued

triggers:
  - trigger: state
    entity_id: !input sensor
    to: null
  - trigger: state
    entity_id: sun.sun
    to: "below_horizon"
  - trigger: state
    entity_id: weather.home
    to: null

variables:
  cloudy_day: >
    {{ states('weather.home') not in
       ['clear-night', 'partlycloudy', 'sunny', 'windy' ]
    }}

actions:
  - choose:
    # Light is turned on when there is occupancy at night, unless someone
    # is sleeping.
    - conditions:
        - condition: state
          entity_id: !input sensor
          state: "on"
        - condition: state
          entity_id: sun.sun
          state: "below_horizon"
        - condition: state
          entity_id: binary_sensor.household_asleep
          state: "off"
        - condition: state
          entity_id: binary_sensor.anyone_home
          state: "on"
      sequence:
        - action: light.turn_on
          target:
            entity_id: !input light

    # Light is turned on when there is occupancy on a cloudy day.
    - conditions:
        - condition: state
          entity_id: !input sensor
          state: "on"
        - condition: state
          entity_id: sun.sun
          state: "above_horizon"
        - condition: state
          entity_id: binary_sensor.household_asleep
          state: "off"
        - condition: state
          entity_id: binary_sensor.anyone_home
          state: "on"
        - "{{ cloudy_day }}"
      sequence:
        - action: light.turn_on
          target:
            entity_id: !input light

    # Turn the light off when the sun comes out during the day to save on
    # power. Doesn't matter whether the room is occupied or not, since we
    # wouldn't turn the light back on if they came in.
    - conditions:
        - condition: state
          entity_id: sun.sun
          state: "above_horizon"
        - "{{ not cloudy_day }}"
      sequence:
        - action: light.turn_off
          target:
            entity_id: !input light

    # Light is turned off when there is no longer occupancy. We don't turn it
    # off at midnight (end of "after sunrise" condition) since that's just
    # annoying.
    - conditions:
        - condition: not
          conditions:
            - condition: state
              entity_id: !input sensor
              state: "on"
      sequence:
        - action: light.turn_off
          target:
            entity_id: !input light
